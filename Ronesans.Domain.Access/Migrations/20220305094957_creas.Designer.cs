// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Ronesans.Domain.Access.Helpers;

namespace Ronesans.Domain.Access.Migrations
{
    [DbContext(typeof(RonesansDbContext))]
    [Migration("20220305094957_creas")]
    partial class creas
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Ronesans.Domain.Concrete.Domain.City", b =>
                {
                    b.Property<int>("city_id")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("city_id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("Ronesans.Domain.Concrete.Domain.File", b =>
                {
                    b.Property<int>("file_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("content_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("destination_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("file_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("length")
                        .HasColumnType("bigint");

                    b.HasKey("file_id");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("Ronesans.Domain.Concrete.Domain.Gender", b =>
                {
                    b.Property<int>("gender_id")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("gender_id");

                    b.ToTable("Genders");
                });

            modelBuilder.Entity("Ronesans.Domain.Concrete.Domain.Role", b =>
                {
                    b.Property<int>("role_id")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("role_id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Ronesans.Domain.Concrete.Domain.Shop", b =>
                {
                    b.Property<int>("shop_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("About")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("city_id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("creation_tsz")
                        .HasColumnType("datetime2");

                    b.Property<string>("currency_code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("TRY");

                    b.Property<DateTime?>("delete_tsz")
                        .HasColumnType("datetime2");

                    b.Property<string>("first_line")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("last_updated_tsz")
                        .HasColumnType("datetime2");

                    b.Property<string>("second_line")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("shop_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("state")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("status_active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool?>("status_visibility")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("user_id")
                        .HasColumnType("int");

                    b.Property<string>("zip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("shop_id");

                    b.HasIndex("city_id");

                    b.HasIndex("user_id");

                    b.ToTable("Shops");
                });

            modelBuilder.Entity("Ronesans.Domain.Concrete.Domain.ShopFile", b =>
                {
                    b.Property<int>("shop_id")
                        .HasColumnType("int");

                    b.Property<int>("file_id")
                        .HasColumnType("int");

                    b.HasKey("shop_id", "file_id");

                    b.HasIndex("file_id");

                    b.ToTable("ShopFiles");
                });

            modelBuilder.Entity("Ronesans.Domain.Concrete.Domain.User", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("creation_tsz")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("delete_tsz")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("first_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("gender_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("last_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("last_updated_tsz")
                        .HasColumnType("datetime2");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("role_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(2);

                    b.Property<bool?>("status_active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool?>("status_visibility")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.HasKey("user_id");

                    b.HasIndex("gender_id");

                    b.HasIndex("role_id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Ronesans.Domain.Concrete.Domain.UserFile", b =>
                {
                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.Property<int>("file_id")
                        .HasColumnType("int");

                    b.HasKey("user_id", "file_id");

                    b.HasIndex("file_id");

                    b.ToTable("UserFiles");
                });

            modelBuilder.Entity("Ronesans.Domain.Concrete.Domain.Shop", b =>
                {
                    b.HasOne("Ronesans.Domain.Concrete.Domain.City", "City")
                        .WithMany("Shops")
                        .HasForeignKey("city_id");

                    b.HasOne("Ronesans.Domain.Concrete.Domain.User", "User")
                        .WithMany("Shops")
                        .HasForeignKey("user_id");

                    b.Navigation("City");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Ronesans.Domain.Concrete.Domain.ShopFile", b =>
                {
                    b.HasOne("Ronesans.Domain.Concrete.Domain.File", "File")
                        .WithMany("ShopFiles")
                        .HasForeignKey("file_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ronesans.Domain.Concrete.Domain.Shop", "Shop")
                        .WithMany("ShopFiles")
                        .HasForeignKey("shop_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("File");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("Ronesans.Domain.Concrete.Domain.User", b =>
                {
                    b.HasOne("Ronesans.Domain.Concrete.Domain.Gender", "gender")
                        .WithMany("User")
                        .HasForeignKey("gender_id");

                    b.HasOne("Ronesans.Domain.Concrete.Domain.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("role_id");

                    b.Navigation("gender");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Ronesans.Domain.Concrete.Domain.UserFile", b =>
                {
                    b.HasOne("Ronesans.Domain.Concrete.Domain.File", "File")
                        .WithMany("UserFiles")
                        .HasForeignKey("file_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ronesans.Domain.Concrete.Domain.User", "User")
                        .WithMany("UserFiles")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("File");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Ronesans.Domain.Concrete.Domain.City", b =>
                {
                    b.Navigation("Shops");
                });

            modelBuilder.Entity("Ronesans.Domain.Concrete.Domain.File", b =>
                {
                    b.Navigation("ShopFiles");

                    b.Navigation("UserFiles");
                });

            modelBuilder.Entity("Ronesans.Domain.Concrete.Domain.Gender", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("Ronesans.Domain.Concrete.Domain.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Ronesans.Domain.Concrete.Domain.Shop", b =>
                {
                    b.Navigation("ShopFiles");
                });

            modelBuilder.Entity("Ronesans.Domain.Concrete.Domain.User", b =>
                {
                    b.Navigation("Shops");

                    b.Navigation("UserFiles");
                });
#pragma warning restore 612, 618
        }
    }
}
